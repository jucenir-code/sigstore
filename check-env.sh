#!/bin/bash

# Script para verificar e configurar o arquivo .env

echo "üîç Verificando arquivo .env..."

# Verificar se o arquivo .env existe
if [ ! -f .env ]; then
    echo "‚ùå Arquivo .env n√£o encontrado!"
    echo "üìù Copiando env.example para .env..."
    
    if [ -f env.example ]; then
        cp env.example .env
        echo "‚úÖ Arquivo .env criado com sucesso!"
    else
        echo "‚ùå Arquivo env.example n√£o encontrado!"
        echo "üìù Criando arquivo .env b√°sico..."
        cat > .env << EOF
APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:iopZ2Sj5XGaz/B4L9XrfSTwWx+qY8g5djpzqyCIaVQc=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack

# Docker user permissions
UID=1000
GID=1000
EOF
        echo "‚úÖ Arquivo .env criado com configura√ß√µes b√°sicas!"
    fi
fi

# Verificar se as vari√°veis UID e GID est√£o definidas
if ! grep -q "UID=" .env; then
    echo "üìù Adicionando UID e GID ao .env..."
    echo "" >> .env
    echo "# Docker user permissions" >> .env
    echo "UID=1000" >> .env
    echo "GID=1000" >> .env
fi

# Verificar se as vari√°veis t√™m valores
UID_VALUE=$(grep "^UID=" .env | cut -d'=' -f2)
GID_VALUE=$(grep "^GID=" .env | cut -d'=' -f2)

if [ -z "$UID_VALUE" ] || [ "$UID_VALUE" = "" ]; then
    echo "‚ö†Ô∏è  UID n√£o definido, definindo como 1000..."
    sed -i 's/^UID=.*/UID=1000/' .env
fi

if [ -z "$GID_VALUE" ] || [ "$GID_VALUE" = "" ]; then
    echo "‚ö†Ô∏è  GID n√£o definido, definindo como 1000..."
    sed -i 's/^GID=.*/GID=1000/' .env
fi

echo "‚úÖ Verifica√ß√£o do .env conclu√≠da!"
echo "üìã Valores atuais:"
echo "   UID: $(grep "^UID=" .env | cut -d'=' -f2)"
echo "   GID: $(grep "^GID=" .env | cut -d'=' -f2)" 